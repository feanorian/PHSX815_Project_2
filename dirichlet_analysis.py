
"""
Name: Craig Brooks
PHSX 815 Spring 2023
Project # 2
Due Date 4/10/2023
This code to calculate log liklihood of getting the data generated by `dirichlet.py` and produces a plot based on the draws

 
"""

import sys
import numpy as np
import matplotlib.pyplot as plt
import csv
import pandas as pd
import seaborn as sns
import random
import matplotlib.tri as tri
from scipy.special import beta

if __name__ == "__main__":


	
	if '-f' in sys.argv:
		p = sys.argv.index('-f')
		InputFile = sys.argv[p+1]
	
	# Opens the datafile and reads it into array   
	
	with open(InputFile) as file:
		table_H0 = pd.read_csv(file, usecols=range(1,4))
		print(table_H0.head()) 
	
	# Arrays that store the counts of each category for all trials
	pH0_white = table_H0['white']
	pH0_green = table_H0['green'] 
	pH0_black = table_H0['black']
	
	# alpha vectors used in experiment
	alpha_H0 = [1,2,3]
	alpha_H1 = [1,1,1]
	
	table_H0['sum'] = table_H0.sum(axis=1)
	
	total = table_H0['sum']
	
	# sum of each alpha vector as input for likelihood functions
	alphaH0_sum = np.sum(alpha_H0)
	alphaH1_sum = np.sum(alpha_H1)
	
	# Numerator for likelihood functions that is based on sum of alpha vectors and the number of trials
	beta_H0 = beta(len(pH0_white), alphaH0_sum)
	beta_H1 = beta(len(pH0_white), alphaH1_sum)

	likelihood_H0 = []
	likelihood_H1 = []

	# Calculates likelihood of each hypothesis
	for i in range(len(table_H0)):
		
		LH0 = (beta_H1/beta_H0)*(beta(pH0_white[i], alpha_H1[0]) *  beta(pH0_green[i], alpha_H1[1]) * beta(pH0_black[i], alpha_H1[2])) \
				/ (beta(pH0_white[i], alpha_H0[0]) *  beta(pH0_green[i], alpha_H0[1]) * beta(pH0_black[i], alpha_H0[2]))
		LH1 = (beta_H0/beta_H1)*(beta(pH0_white[i], alpha_H0[0]) *  beta(pH0_green[i], alpha_H0[1]) * beta(pH0_black[i], alpha_H0[2])) \
				/ (beta(pH0_white[i], alpha_H1[0]) *  beta(pH0_green[i], alpha_H1[1]) * beta(pH0_black[i], alpha_H1[2]))
		likelihood_H0.append(LH0)
		likelihood_H1.append(LH1)
	   

	# Plots the log-likelihood
	sns.histplot(np.log(likelihood_H0),stat='probability', bins=10, element="step", color = 'blue', alpha= .5, label=rf'H0 - $\alpha = {str(alpha_H0)}$')
	sns.histplot(np.log(likelihood_H1),stat='probability', bins=10, element="step", color = 'orange', alpha= .5, label=rf'H1 - $\alpha = {str(alpha_H1)}$')
	plt.xlabel('Log-Likelihood (log(P(X | H0)/ P(X| H1)))')
	plt.title(rf'Log Likelihood for $\alpha = {str(alpha_H0)}$ vs $\alpha = {str(alpha_H1)}$, {len(pH0_white)} trials')
	#plt.savefig(f'LLH0_{len(pH0_white)}')
	plt.legend()
	plt.show()
